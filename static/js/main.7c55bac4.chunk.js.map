{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","slug","useParams","useState","people","setPeople","isLoading","setIsLoading","isError","setError","getPeopleFromServer","peopleFromServer","findParent","parentName","parent","find","person","name","to","classnames","sex","useEffect","isNoPeople","length","map","born","died","motherName","fatherName","Navbar","role","isActive","classNames","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7c55bac4.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const { slug } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setError] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const findParent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    if (parent) {\n      return (\n        <Link\n          to={`/people/${parent.slug}`}\n          className={classnames({ 'has-text-danger': parent.sex === 'f' })}\n        >\n          {parent.name}\n        </Link>\n      );\n    }\n\n    return parentName || '-';\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  const isNoPeople = people.length === 0 && !isLoading && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isNoPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    key={person.slug}\n                    data-cy=\"person\"\n                    className={classnames({\n                      'has-background-warning': slug === person.slug,\n                    })}\n                  >\n                    <td>\n                      <Link\n                        to={`/people/${person.slug}`}\n                        className={classnames({\n                          'has-text-danger': person.sex === 'f',\n                        })}\n                      >\n                        {person.name}\n                      </Link>\n                    </td>\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>{findParent(person.motherName)}</td>\n                    <td>{findParent(person.fatherName)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n// import { Loader } from './components/Loader';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n\n        {/* <div className=\"block\">\n          <div className=\"box table-container\">\n            <Loader />\n\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          </div>\n        </div> */}\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}